{
  "_from": "vue-session",
  "_id": "vue-session@1.0.0",
  "_inBundle": false,
  "_integrity": "sha512-Ep9lRKGgCZdcGV3In3R3zoSp5Wr+hlcIc8WJ9BG+QKzibwaFZnnvp9HBVdd+dU8d6HGLSi5sWywDmd5MkrkfoQ==",
  "_location": "/vue-session",
  "_phantomChildren": {},
  "_requested": {
    "escapedName": "vue-session",
    "fetchSpec": "latest",
    "name": "vue-session",
    "raw": "vue-session",
    "rawSpec": "",
    "registry": true,
    "saveSpec": null,
    "type": "tag"
  },
  "_requiredBy": [
    "#USER",
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/vue-session/-/vue-session-1.0.0.tgz",
  "_shasum": "ca642c751f569a48f8dd66f356f1727fbe081f7c",
  "_spec": "vue-session",
  "_where": "/Users/night/go/src/program/web",
  "author": {
    "email": "feinfadiges@gmail.com",
    "name": "Victor Ferreira"
  },
  "bugs": {
    "url": "https://github.com/victorsferreira/vue-session/issues"
  },
  "bundleDependencies": false,
  "dependencies": {},
  "deprecated": false,
  "description": "A simplistic session plugin for VueJS backed by SessionStorage",
  "devDependencies": {},
  "esm": "index.esm.js",
  "homepage": "https://github.com/victorsferreira/vue-session#readme",
  "keywords": [
    "plugin",
    "session",
    "vue",
    "vue-plugin",
    "vuejs"
  ],
  "license": "ISC",
  "main": "index.js",
  "name": "vue-session",
  "optionalDependencies": {},
  "readme": "To install the plugin, do the following:\n\n```javascript\nimport VueSession from 'vue-session'\nVue.use(VueSession)\n```\n\nNow you can use it in your components with the `$session` property.\n\n## Options\n\nVueSession can be started with some options that will change its behavior.\n\n- `persist` A Boolean value to determine whether the data stored in the session may persist between tabs and browser instances.\n\nPass the options in the `use` method:\n\n```javascript\nVue.use(VueSession, options)\n```\n\n## Reference\n\n- `this.$session.getAll()`, returns all data stored in the Session.\n- `this.$session.set(key,value)`, sets a single value to the Session.\n- `this.$session.get(key)`, returns the value attributed to the given key.\n- `this.$session.start()`, initializes a session with a 'session-id'. If you attempt to save a value without having started a new session, the plugin will automatically start a new session.\n- `this.$session.exists()`, checks whether a session has been initialized or not.\n- `this.$session.has(key)`, checks whether the key exists in the Session\n- `this.$session.remove(key)`, removes the given key from the Session\n- `this.$session.clear()`, clear all keys in the Session, except for 'session-id', keeping the Session alive\n- `this.$session.destroy()`, destroys the Session\n- `this.$session.id()`, returns the 'session-id'\n- `this.$session.renew(session_id)`, allows a user to renew a previous session by manually inputting the session_id\n\n### Flash\n\nFlash allows you to save data until you read them without having to start a regular Session.\n\n- `this.$session.flash.set(key, value)`, sets a flash value\n- `this.$session.flash.get(key)`, reads and removes a flash value\n- `this.$session.flash.remove(key)`, removes a flash value\n\n\n## Example\n\nYour login method could look like this:\n\n```javascript\nexport default {\n    name: 'login',\n    methods: {\n        login: function () {\n          this.$http.post('http://somehost/user/login', {\n            password: this.password,\n            email: this.email\n          }).then(function (response) {\n            if (response.status === 200 && 'token' in response.body) {\n              this.$session.start()\n              this.$session.set('jwt', response.body.token)\n              Vue.http.headers.common['Authorization'] = 'Bearer ' + response.body.token\n              this.$router.push('/panel/search')\n            }\n          }, function (err) {\n            console.log('err', err)\n          })\n        }\n    }\n}\n```\n\nIn your logged-in area, you can check whether or not a session is started and destroy it when the user wants to logout:\n\n```javascript\nexport default {\n  name: 'panel',\n  data () {\n    return { }\n  },\n  beforeCreate: function () {\n    if (!this.$session.exists()) {\n      this.$router.push('/')\n    }\n  },\n  methods: {\n    logout: function () {\n      this.$session.destroy()\n      this.$router.push('/')\n    }\n  }\n}\n```\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/victorsferreira/vue-session.git"
  },
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "unpkg": "index.unpkg.js",
  "version": "1.0.0"
}
